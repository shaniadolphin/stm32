
#ifndef _MSG_H_
#define _MSG_H_


typedef enum
{
	//system message
	MSG_KEYSCAN_PROCESSED = (unsigned int)0x00,
	KEY_SHORT_WHITE,
	KEY_SHORT_BLACK,
	KEY_SHORT_CAR,
	KEY_SHORT_HORSE,
	KEY_SHORT_PHASE,
	KEY_SHORT_QUEEN,
	KEY_LONG_WHITE,
	KEY_LONGLONG_WHITE,
	KEY_LONG_BLACK,
	KEY_LONGLONG_BLACK,
	KEY_LONG_CAR,
	KEY_LONG_HORSE,
	KEY_LONG_PHASE,
	KEY_LONG_QUEEN,

	KEY_LONGLONG_CAR,
	KEY_LONGLONG_HORSE,
	KEY_LONGLONG_PHASE,
	KEY_LONGLONG_QUEEN,

	KEY_RISING,

	MSG_SEND_MOVE,
	MSG_DELAY_SEND,
	MSG_ERROR,

	MSG_USB_ON,

	MSG_START_PLAY,
	MSG_START_PLAY_HISTORY,
	MSG_PLAYING_FLAG,
	MSG_TIME_RUNNING,
	MSG_ENABLE_TIME_COUNT,
	MSG_PAUSE,
	MSG_BLACK_PLAYING,
	MSG_BLACK_DECREASE,
	MSG_PASSTIME_COUNT,

	MSG_CHANGE_CHESS,
	MSG_SOLDIER_RISING,
	MSG_SOLDIER_EAT_PASSANT,

	MSG_ENTER_SMARTLINK,

	MSG_DISPLAY_UPDATE,

	MSG_WIFI_READY,
	MSG_WIFI_CMD_OK,
	MSG_WIFI_CMD_ERROR,
	MSG_WIFI_TCP_OK,
	MSG_WIFI_TCP_ERROR,
	MSG_WIFI_SSID_GOTIP,
	MSG_WIFI_SSID_DISCONNECT,
	MSG_WIFI_IPD_FLAG,

	//sys_register msg
	FLAG_SYS_REGISTER,
	FLAG_REGISTER_END,
	MSG_SYS_REGISTER_PHRASE_FLAG,

	FLAG_RTC_UPDATE,

	FLAG_SELF_TEST,
	FLAG_SERVER_CPUID,

	//End
	MSG_ID_MAX  //max message number

}MSG_ID;

#define FLAG_WIFI_READY			0x01
#define FLAG_WIFI_SSID_GOTIP	0x02
#define FLAG_WIFI_CMD_OK		0x04
#define FLAG_WIFI_CMD_ERROR		0x08
#define FLAG_WIFI_IPD			0x80

extern void MsgInit(void);
extern void SetMsg(MSG_ID MsgId);
extern unsigned char GetMsg(MSG_ID MsgId);
extern void ClearMsg(MSG_ID MsgId);
extern unsigned char CheckMsg(MSG_ID MsgId);

#endif

